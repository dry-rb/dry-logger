---
- version: 1.0.4
  date: 2024-05-10
  fixed:
    - |-
      Accept log messages via given block, ensuring compatibility with standard Ruby logger (@komidore64)
  changed:
    - |-
      Drop support for Ruby 2.7 (@timriley)
- version: 1.0.3
  summary:
  date: 2022-12-09
  fixed:
  added:
  - 'Support for ruby 2.7 (needs backports gem that *you* need to add to your Gemfile) (via #24) (@solnic)'
  changed:
- version: 1.0.2
  summary:
  date: 2022-11-24
  fixed:
  - 'Handle `:log_if` in Proxy constructors (via #23) (@solnic)'
  added:
  changed:
- version: 1.0.1
  date: 2022-11-23
  fixed:
  - Support for `log_if` in proxied loggers (via 81115320b490034ddf9dfe4f3775322b9271e0cd)
    (@solnic)
  - Support exceptions and payloads in proxied loggers (via 93b3fd59ebbdc7e63620eb064694d58455df831f)
    (@solnic)
- version: 1.0.0
  date: 2022-11-17
  summary: |
    This is a port of the original Hanami logger from hanami-utils extended with support for logging
    dispatchers that can log to different destinations and plenty more.
  fixed:
  added:
  - 'Support arbitrary logging backends through proxy (via #12) (@solnic)'
  - 'Support for conditional logging when using arbitrary logging backends (via #13)
    (@solnic)'
  - 'Support for registering templates via `Dry::Logger.register_template` (via #14)
    (@solnic)'
  - 'Support for payload keys as template tokens (via #14) (@solnic)'
  - 'Support for payload value formatter methods, ie if there''s `:verb` token your
    formatter can implement `format_verb(value)` (via #14) (@solnic)'
  - 'Support block-based setup (via #16) (@solnic)'
  - 'Support for defining cherry-picked keys from the payload in string templates
    (via #17) (@solnic)'
  - 'Support for `%<payload>s` template token. It will be replaced by a formatted
    payload, excluding any key that you specified explicitly in the template (via
    #17) (@solnic)'
  - 'Support for colorized output using color tags in templates (via #18) (@solnic)'
  - 'Support for `colorize: true` logger option which enables severity coloring in
    string formatter (via #18) (@solnic)'
  - '`:details` template: `"[%<progname>s] [%<severity>s] [%<time>s] %<message>s %<payload>s"`
    (@solnic)'
  - 'A new option `on_crash` for setting up a logger-crash handling proc (via #21)
    (@solnic)'
  - 'Handle logger crashes by default using a simple `$stdout` logger (via #21) (@solnic)'
  - Support for regular logger backends that don't support `log?` predicate (@solnic)
  - 'Support for providing a string template for log entries via `template` option
    (via #7) (@solnic)'
  - "`:rack` string log formatter which inlines request info and displays params at
    the end (@solnic)"
  - 'Conditional log dispatch via `#log_if` backend''s predicate (via #9) (@solnic)'
  - 'Add support for shared context and tagged log entries (via #10) (@solnic)'
